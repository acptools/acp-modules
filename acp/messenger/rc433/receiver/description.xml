<?xml version="1.0"?>
<component-type name="acp.messenger.rc433.receiver">
	<description>RC 433 MHz receiver</description>
	<dependencies>
		<module>acp.messenger.rc433.common</module>	
	</dependencies>
	<view>
		<includes>
			<include>Rc433Receiver.h</include>
		</includes>
		<class>acp_messenger_rc433_receiver::TRc433Receiver</class>
		<constructor-args>
			<arg type="autogenerated">controller</arg>
		</constructor-args>
	</view>
	<controller>
		<includes>
			<include>Rc433Receiver.h</include>
		</includes>
		<class>acp_messenger_rc433_receiver::Rc433ReceiverController</class>
		<constructor-args>
			<arg type="property">Pin</arg>
			<arg type="property">Protocol</arg>
			<arg type="property">PulseLength</arg>
			<arg type="property">RepeatTransmit</arg>
		</constructor-args>
	</controller>
	<properties>
		<property>
			<name>Pin</name>
			<type>pin</type>
			<description>Data pin where receiver is connected.</description>
		</property>
		<property>
			<name>Protocol</name>
			<type>int</type>
		</property>
		<property>
			<name>PulseLength</name>
			<type>int</type>
		</property>
		<property>
			<name>RepeatTransmit</name>
			<type>int</type>
			<value type="default">1</value>
		</property>
		<property>
			<name>ReadInterval</name>
			<type>unsigned long</type>
			<value type="default">30</value>
			<description>Interval in milliseconds in which the state of the associated hw pin is read. This value is also used as a debounce interval.</description>
		</property>
	</properties>
	<events>
		<event>
			<name>OnMessageReceived</name>
			<parameters>
				<parameter name="receivedValue">unsigned long</parameter>
				<parameter name="receivedBitlength">unsigned int</parameter>
				<parameter name="receivedDelay">unsigned int</parameter>
				<parameter name="receivedProtocol">unsigned int</parameter>
				<parameter name="receivedRawdata">unsigned int*</parameter>
			</parameters>
			<binding type="attribute">messageReceivedEvent</binding>
			<description>Event triggered when a new message is received.</description>
		</event>	
	</events>
	<loopers>
		<looper>
			<method>readLooper</method>
			<interval>ReadInterval</interval>
		</looper>
	</loopers>
</component-type>
