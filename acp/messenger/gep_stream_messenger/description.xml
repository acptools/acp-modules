<?xml version="1.0"?>
<component-type name="acp.messenger.gep_stream_messenger">
	<description>Messenger over stream supporting binary messages. Features: variable length, checksum checking, error recovery (message boundaries detection), message tags.</description>
	<view>
		<includes>
			<include>gepstream_messenger.h</include>
		</includes>
		<class>acp_messenger_gep_stream::TGEPStreamMessenger</class>
		<template-args>
			<arg type="property">MessengerId</arg>
			<arg type="property">MaxMessageSize</arg>
		</template-args>
		<constructor-args>
			<arg type="autogenerated">controller</arg>
		</constructor-args>	
	</view>
	<controller>
		<includes>
			<include>gepstream_messenger.h</include>
		</includes>
		<class>acp_messenger_gep_stream::GEPStreamController</class>
		<template-args>
			<arg type="property">MessengerId</arg>
			<arg type="property">MaxMessageSize</arg>
		</template-args>
		<loop>
			<method>loop</method>
		</loop>
	</controller>
	<properties>
		<property>
			<name>MessengerId</name>
			<type min="0" max="15">int</type>
			<value type="default">0</value>
			<description>Identifier of the messenger applied to filter received messages. If the identifier is 0, all messages are received.</description>
		</property>
		<property>
			<name>MaxMessageSize</name>
			<type min="1" max="2000">int</type>
			<value type="default">100</value>
			<description>Maximal length of a message that can be received by the messenger.</description>
		</property>
	</properties>
	<events>
		<event>
			<name>OnMessageReceived</name>
			<parameters>
				<parameter name="message">const char*</parameter>
				<parameter name="messageLength">int</parameter>
				<parameter name="messageTag">long</parameter>
			</parameters>
			<binding type="attribute">messageReceivedEvent</binding>
			<description>Event triggered when a new message is received.</description>
		</event>	
	</events>	
</component-type>
